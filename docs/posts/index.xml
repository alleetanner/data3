<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Graphical Data Apps</title>
        <link>https://alleetanner.github.io/graphical-data-apps/posts/</link>
        <description>All Posts | Graphical Data Apps</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 18 Feb 2023 00:00:00 &#43;0100</lastBuildDate><atom:link href="https://alleetanner.github.io/graphical-data-apps/posts/" rel="self" type="application/rss+xml" /><item>
    <title>8 • Advanced aspects of data apps</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/08advanced/</link>
    <pubDate>Sat, 18 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/08advanced/</guid>
    <description><![CDATA[Warning   In production!     Main section sub-section  bullet1 bullt2  Normal text body.
Info   Info1 Info2     ]]></description>
</item>
<item>
    <title>7 • Deploying</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/07deploying/</link>
    <pubDate>Fri, 17 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/07deploying/</guid>
    <description><![CDATA[Warning   In production!     Main section sub-section  bullet1 bullt2  Normal text body.
Info   Info1 Info2     ]]></description>
</item>
<item>
    <title>6 • Animations</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/06animations/</link>
    <pubDate>Thu, 16 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/06animations/</guid>
    <description><![CDATA[In this final section, we will introduce animations. Many of the graphics libraries include the ability to animate visuals, but always think carefully about whether this actually adds anything to your app. Some animations can also get quite technical to run properly, but Plotly makes it relatively easy, especially with px.scatter().
Preparing our interface To start we are going to add a simple toggle checkbox, as we did earlier, controlling if animation is enabled or not.]]></description>
</item>
<item>
    <title>5 • Widgets</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/05widgets/</link>
    <pubDate>Wed, 15 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/05widgets/</guid>
    <description><![CDATA[Widgets The power of data apps is in allowing users to interact with data and visuals. We do this by creating &ldquo;widgets&rdquo;. A widget is any interactable part of the page, for example buttons, sliders, checkboxes and uploaders. An important difference between widgets and layout components is that widgets set the values of variables. We will see the Python syntax for this in a moment.
First widget Let&rsquo;s add our first widget.]]></description>
</item>
<item>
    <title>4 • Charts</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/04charts/</link>
    <pubDate>Tue, 14 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/04charts/</guid>
    <description><![CDATA[Plots, graphs or charts?  The words plot, chart and graph are used interchangeably, but I will stick with chart in this course. The reason I prefer this term is because it feels more general: for example we could be making a map, and the word &ldquo;graph&rdquo; would not make sense. Also, the word &ldquo;plot&rdquo; is kind of reserved for some things in Python, and is in use by many graphic libraries.]]></description>
</item>
<item>
    <title>3 • Layout</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/03layout/</link>
    <pubDate>Mon, 13 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/03layout/</guid>
    <description><![CDATA[Typing is better than copy-pasting  We provide code blocks through this course, which you can copy and paste to build your scripts. However, we strongly recommend that learners type out code manually. This might seem a minor point, but the benefits are:
 you get a feel for code syntax: spaces, quotes, indentation, colons, under_scores, etc, you gain a better understanding of what (the) [different] {brackets} do, most important of all, you will make mistakes!]]></description>
</item>
<item>
    <title>2 • Why build data apps?</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/02intro/</link>
    <pubDate>Sun, 12 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/02intro/</guid>
    <description><![CDATA[What are data apps? A data app allows visual exploration of a dataset, without requiring the use to have specific technical skills. A data app can range from being simple (perhaps just drawing a graph) to sophisticated (including user log-ins and profiles, connections to databases, methods to transform data, and interactive visualisations). A data app can also be a web app, if it is deployed to the internet so that others can use it through a web browser.]]></description>
</item>
<item>
    <title>1 ∙ Requirements and set up</title>
    <link>https://alleetanner.github.io/graphical-data-apps/posts/01requirements/</link>
    <pubDate>Sat, 11 Feb 2023 00:00:00 &#43;0100</pubDate>
    <author>Alastair Tanner</author>
    <guid>https://alleetanner.github.io/graphical-data-apps/posts/01requirements/</guid>
    <description><![CDATA[Glossary  The words library, module and package are often used interchangeably, and they mean very similar things; it is entirely natural to be confused by this!
 Library : a collection of python files that expand the ability of python, using the import command. These are like accessories or modifications, typically giving you access to powerful, professional functions and classes written by collaborations of expert coders.  A library can be standard (it comes built into python), for example time or math, or 3rd party, so, written by people outside of the core Python developers, and as such will need to be installed using a package manager.]]></description>
</item>
</channel>
</rss>
